/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// scaling operator:
convertToMeters .01;

h     2.59;   //                                 // Height of ripple in units of [cm]
l     17.24;   //                                // Length of ripple in units of [cm]

// vertice coordinates:
xmin 0;
xmax 17.24;
ymin 0;
ymax #calc "2.5*$xmax + 0.5*$h";
zmin 0;
zmax 1;

// cell numbers:
xcells 100;
ycells 200;
zcells 1;

// generating vertices:
vertices
(
    ($xmin $ymin $zmin)		//0
    ($xmax $ymin $zmin)		//1
    ($xmax $ymax $zmin)		//2
    ($xmin $ymax $zmin)		//3
    ($xmin $ymin $zmax)		//4
    ($xmax $ymin $zmax)		//5
    ($xmax $ymax $zmax)		//6
    ($xmin $ymax $zmax)		//7
);

// generating blocks:
blocks
(
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading (1 450 1)  //450
);

edges
(
);

boundary
(
    freeStream
    {
        type symmetry;
        faces
        (
            (3 7 6 2)
        );
    }
    bottomWall
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }
    left
    {
        type cyclic;
        neighbourPatch right;
        faces
        (
          (0 4 7 3)
        );
    }
    right
    {
        type cyclic;
        neighbourPatch left;
        faces
        (
          (2 6 5 1)
        );
    }
    front
    {
        type empty;
        faces
        (
          (4 5 6 7)
        );
    }
    back
    {
        type empty;
        faces
        (
          (0 3 2 1)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
